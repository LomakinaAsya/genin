name: Build
on:
  push:
    branches:
      - master
    tags:
      - '0.*'
env:
  YUM_REGISTRY: https://binary.picodata.io/repository/yum
jobs:
  build:
    name: Build genin binary
    runs-on: [self-hosted, genin]
    container:
      image: docker.binary.picodata.io/rust-builder-nightly:latest
    outputs:
      app_version: ${{ steps.get_last_tag.outputs.app_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version from tag
        id: get_last_tag
        run: |
          export VERSION=$(git describe --tags --abbrev=0)
          echo "::set-output name=app_version::${VERSION}"
      - name: Run make build
        run: make build
      - name: Archive apple x64_86 binary
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin.zip
          path: target/x86_64-apple-darwin/release/genin
      - name: Archive windows x64_86 binary
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-gnu.zip
          path: target/x86_64-pc-windows-gnu/release/genin.exe
      - name: Archive gnu binary
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu.zip
          path: target/x86_64-unknown-linux-gnu/release/genin
      - name: Archive musl binary
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-musl.zip
          path: target/x86_64-unknown-linux-musl/release/genin

  musl-bin:
    name: Upload musl binary
    needs: build
    runs-on: [self-hosted, genin]
    container:
      image: docker.binary.picodata.io/rust-builder-nightly:latest
    env:
      VERSION: ${{ needs.build.outputs.app_version }}
    steps:
      - name: Download builded binary
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl.zip
      - name: Build rpm
        run: 'curl -v -f -H "Authorization: Basic ${{ secrets.RAW_AUTH_RW }}" --upload-file x86_64-unknown-linux-musl.zip ${RAW_REGISTRY}/genin/genin-${VERSION}-x86_64-musl.zip'

  centos7:
    name: Build centos 7 rpm
    needs: build
    runs-on: [self-hosted, genin]
    container:
      image: docker.binary.picodata.io/centos:centos7
    env:
      VERSION: ${{ needs.build.outputs.app_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download builded binary
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl.zip
          path: ./x86_64-unknown-linux-musl/
      - name: Build rpm
        run: | 
          yum install -y rpm-build rpm-devel rpmdevtools make
          sed -ie "s/\${VERSION}/${VERSION}/g" build/el7/genin.x86_64.spec
          rpmdev-setuptree
          rpmbuild -bb build/el7/genin.x86_64.spec
          sleep 10000
          'curl -v -f -H "Authorization: Basic ${{ secrets.YUM_AUTH_RW }}" --upload-file /github/home/rpmbuild/RPMS/x86_64/genin-${VERSION}-1.el7.x86_64.rpm ${YUM_REGISTRY}/el/7/x86_64/os/genin-${VERSION}-1.el7.x86_64.rpm'

  centos8:
    name: Build centos 8 prm
    needs: build
    runs-on: [self-hosted, genin]
    container:
      image: docker.binary.picodata.io/rockylinux:8
    env:
      VERSION: ${{ needs.build.outputs.app_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download builded binary
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl.zip
          path: ./x86_64-unknown-linux-musl/
      - name: Build rpm
        run: |
          yum install -y rpm-build rpm-devel rpmdevtools make
          sed -ie "s/\${VERSION}/${VERSION}/g" build/el8/genin.x86_64.spec
          rpmdev-setuptree
          rpmbuild -bb build/el8/genin.x86_64.spec
          'curl -v -f -H "Authorization: Basic ${{ secrets.YUM_AUTH_RW }}" --upload-file /github/home/rpmbuild/RPMS/x86_64/genin-${VERSION}-1.el8.x86_64.rpm ${YUM_REGISTRY}/el/8/x86_64/os/genin-${VERSION}-1.el8.x86_64.rpm'

  release:
    name: Create new release
    needs: [centos7, centos8]
    runs-on: [ self-hosted, genin ]
    steps:
      - name: Create rhel7 Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.build.outputs.app_version }}
          release_name: Release genin-${{ needs.build.outputs.app_version }}
          body: |
            [genin-${{ needs.build.outputs.app_version }}-1.el7.x86_64.rpm](${{ env.YUM_REGISTRY }}/el/7/x86_64/os/genin-${{ needs.build.outputs.app_version }}-1.el7.x86_64.rpm)
            [genin-${{ needs.build.outputs.app_version }}-1.el8.x86_64.rpm](${{ env.YUM_REGISTRY }}/el/8/x86_64/os/genin-${{ needs.build.outputs.app_version }}-1.el8.x86_64.rpm)
          draft: false
          prerelease: false
